{"version":3,"file":"ngx-roslib.js","sources":["../../../projects/ngx-roslib/src/lib/ngx-roslib.service.ts","../../../projects/ngx-roslib/src/lib/ros-message.model.ts","../../../projects/ngx-roslib/src/public-api.ts","../../../projects/ngx-roslib/src/ngx-roslib.ts"],"sourcesContent":["import { Injectable, OnDestroy } from '@angular/core';\r\nimport { webSocket, WebSocketSubject } from 'rxjs/webSocket';\r\nimport { Observable, Subject, Subscription } from 'rxjs';\r\nimport { filter, pluck, take, tap, map } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class NgxRoslibService implements OnDestroy {\r\n    connection$: WebSocketSubject<any> | undefined;\r\n    onOpen: Observable<any> | undefined;\r\n    onClose: Observable<CloseEvent> | undefined;\r\n    onError: Observable<any> | undefined;\r\n    isConnected = false;\r\n    private ros: Rosbridge | undefined;\r\n\r\n    constructor() {}\r\n\r\n    set statusLevel(level: StatusMessageLevel) {\r\n        if (this.ros) this.ros.statusLevel = level;\r\n    }\r\n\r\n    connect(\r\n        url: string,\r\n        transportLibrary: RosLibTransportLibrary = 'websocket',\r\n        transportOptions?: RTCConfiguration\r\n    ): Rosbridge {\r\n        const ros = (this.ros = new Rosbridge());\r\n        this.connection$ = ros.connect(url, transportLibrary, transportOptions);\r\n        this.onOpen = ros.onOpen;\r\n        this.onClose = ros.onClose;\r\n        this.onError = ros.onError;\r\n        return ros;\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.connection$?.complete();\r\n    }\r\n}\r\n\r\ninterface GetTopicsServiceResponse {\r\n    topics: string[];\r\n    types: string[];\r\n}\r\n\r\ninterface GetNodesServiceResponse {\r\n    nodes: string[];\r\n    types: string[];\r\n}\r\n\r\nexport class Rosbridge {\r\n    isConnected = false;\r\n    transportLibrary: RosLibTransportLibrary = 'websocket';\r\n    transportOptions: RTCConfiguration | undefined;\r\n    connection$: WebSocketSubject<any> | undefined;\r\n    private connectionOpened$ = new Subject<Event>();\r\n    onOpen = this.connectionOpened$.asObservable();\r\n    private connectionClosed$ = new Subject<CloseEvent>();\r\n    onClose = this.connectionClosed$.asObservable();\r\n    private connectionError$ = new Subject<any>();\r\n    onError: Observable<any> | undefined = this.connectionError$.asObservable();\r\n\r\n    constructor(\r\n        url?: string,\r\n        transportLibrary?: RosLibTransportLibrary,\r\n        transportOptions?: RTCConfiguration\r\n    ) {\r\n        if (url) {\r\n            this.connection$ = this.connect(\r\n                url,\r\n                transportLibrary ?? 'websocket',\r\n                transportOptions\r\n            );\r\n        }\r\n    }\r\n\r\n    set statusLevel(level: StatusMessageLevel) {\r\n        const setStateLevelRequest = new SetStatusLevel(level);\r\n        this.sendRequest(setStateLevelRequest);\r\n    }\r\n\r\n    connect(\r\n        url: string,\r\n        transportLibrary: RosLibTransportLibrary = 'websocket',\r\n        transportOptions?: RTCConfiguration\r\n    ): WebSocketSubject<any> | undefined {\r\n        this.transportOptions = transportOptions;\r\n        this.transportLibrary = transportLibrary;\r\n        let wsUrl: string;\r\n        if (transportLibrary === 'websocket') {\r\n            wsUrl = url.replace(/(http)(s)?:\\/\\//, 'ws$2://');\r\n            if (!this.connection$ || this.connection$.closed) {\r\n                this.connection$ = webSocket({\r\n                    url: wsUrl,\r\n                    binaryType: 'arraybuffer',\r\n                    openObserver: {\r\n                        next: (value) => {\r\n                            this.isConnected = true;\r\n                            this.connectionOpened$.next(value);\r\n                        },\r\n                    },\r\n                    closeObserver: {\r\n                        next: (closeEvent) => {\r\n                            this.isConnected = false;\r\n                            this.connectionClosed$.next(closeEvent);\r\n                        },\r\n                    },\r\n                    closingObserver: {\r\n                        next: () => {},\r\n                    },\r\n                });\r\n            }\r\n        } else if (transportLibrary === 'workerSocket') {\r\n            // TODO: add websocket in web worker implementation for the connect method\r\n            //\r\n        }\r\n        this.connection$?.subscribe(\r\n            () => {},\r\n            () => {}\r\n        ); // Needed to open the websocket\r\n        return this.connection$;\r\n    }\r\n\r\n    authenticate(\r\n        mac: string,\r\n        client: string,\r\n        dest: string,\r\n        rand: string,\r\n        t: number,\r\n        level: string,\r\n        end: number\r\n    ) {\r\n        this.sendRequest({\r\n            op: 'auth',\r\n            mac: mac,\r\n            client: client,\r\n            dest: dest,\r\n            rand: rand,\r\n            t: t,\r\n            level: level,\r\n            end: end,\r\n        });\r\n    }\r\n\r\n    sendRequest(message: any) {\r\n        if (!this.isConnected) {\r\n            console.log(\r\n                'Trying to send request, but not connected. Waiting...'\r\n            );\r\n            this.onOpen\r\n                ?.pipe(take(1))\r\n                .subscribe(() => this.connection$?.next(message));\r\n        } else {\r\n            this.connection$?.next(message);\r\n        }\r\n    }\r\n\r\n    getTopics(\r\n        callback: (topics: string[]) => void,\r\n        failedCallback?: (error: any) => void\r\n    ): void {\r\n        const topicsService = new RosService<Object, GetTopicsServiceResponse>({\r\n            ros: this,\r\n            name: '/rosapi/topics',\r\n            serviceType: 'rosapi/Topics',\r\n        });\r\n\r\n        if (failedCallback) {\r\n            topicsService.call(\r\n                {},\r\n                (msg) => {\r\n                    callback(msg.topics);\r\n                },\r\n                failedCallback\r\n            );\r\n        } else {\r\n            topicsService.call({}, (msg) => {\r\n                callback(msg.topics);\r\n            });\r\n        }\r\n    }\r\n\r\n    getNodes(\r\n        callback: (nodes: string[]) => void,\r\n        failedCallback?: (error: any) => void\r\n    ): void {\r\n        const topicsService = new RosService<Object, GetNodesServiceResponse>({\r\n            ros: this,\r\n            name: '/rosapi/nodes',\r\n            serviceType: 'rosapi/Nodes',\r\n        });\r\n\r\n        if (failedCallback) {\r\n            topicsService.call(\r\n                {},\r\n                (msg) => {\r\n                    callback(msg.nodes);\r\n                },\r\n                failedCallback\r\n            );\r\n        } else {\r\n            topicsService.call({}, (msg) => {\r\n                callback(msg.nodes);\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nlet idCounter: number = 0;\r\n\r\nclass RosbridgeProtocol {\r\n    op: RosbridgeOperation | undefined;\r\n}\r\n\r\nclass SetStatusLevel extends RosbridgeProtocol {\r\n    private id: string | undefined;\r\n    private level: StatusMessageLevel;\r\n\r\n    constructor(level: StatusMessageLevel, id?: string) {\r\n        super();\r\n        this.op = 'set_level';\r\n        this.level = level;\r\n        this.id = id;\r\n    }\r\n}\r\n\r\nclass StatusMessage extends RosbridgeProtocol {\r\n    private id: string | undefined;\r\n    private level: StatusMessageLevel;\r\n    private msg: string;\r\n\r\n    constructor(level: StatusMessageLevel, msg: string, id?: string) {\r\n        super();\r\n        this.op = 'status';\r\n        this.level = level;\r\n        this.id = id;\r\n        this.msg = msg;\r\n    }\r\n}\r\n\r\nclass Authenticate extends RosbridgeProtocol {\r\n    private mac: string;\r\n    private client: string;\r\n    private dest: string;\r\n    private rand: string;\r\n    private t: number;\r\n    private level: string;\r\n    private end: number;\r\n\r\n    constructor(\r\n        mac: string,\r\n        client: string,\r\n        dest: string,\r\n        rand: string,\r\n        t: number,\r\n        level: string,\r\n        end: number\r\n    ) {\r\n        super();\r\n        this.op = 'auth';\r\n        this.mac = mac;\r\n        this.client = client;\r\n        this.dest = dest;\r\n        this.rand = rand;\r\n        this.t = t;\r\n        this.level = level;\r\n        this.end = end;\r\n    }\r\n}\r\n\r\nclass Advertise extends RosbridgeProtocol {\r\n    id: string | undefined;\r\n    private topic: string;\r\n    private type: string;\r\n    private latch: boolean;\r\n    private queue_size: number;\r\n\r\n    constructor(\r\n        topic: string,\r\n        type: string,\r\n        id?: string,\r\n        latch?: boolean,\r\n        queue_size?: number\r\n    ) {\r\n        super();\r\n        this.op = 'advertise';\r\n        this.topic = topic;\r\n        this.id = `advertise:${this.topic}:${++idCounter}`;\r\n        this.type = type;\r\n        this.latch = latch ?? false;\r\n        if (queue_size) {\r\n            this.queue_size = Math.max(0, queue_size);\r\n        } else {\r\n            this.queue_size = 100;\r\n        }\r\n    }\r\n}\r\n\r\nclass Unadvertise extends RosbridgeProtocol {\r\n    private id: string | undefined;\r\n    private topic: string;\r\n\r\n    constructor(topic: string, id?: string) {\r\n        super();\r\n        this.op = 'unadvertise';\r\n        this.id = id;\r\n        this.topic = topic;\r\n    }\r\n}\r\n\r\nclass Publish extends RosbridgeProtocol {\r\n    private id: string | undefined;\r\n    private topic: string;\r\n    private msg: string;\r\n    private latch: boolean;\r\n    private queue_size: number;\r\n\r\n    constructor(\r\n        topic: string,\r\n        msg: any,\r\n        id?: string,\r\n        latch?: boolean,\r\n        queue_size?: number\r\n    ) {\r\n        super();\r\n        this.op = 'publish';\r\n        this.topic = topic;\r\n        this.id = `publish:${this.topic}:${++idCounter}`;\r\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\r\n        this.msg = msg;\r\n        this.latch = latch ?? false;\r\n        if (queue_size) {\r\n            this.queue_size = Math.max(0, queue_size);\r\n        } else {\r\n            this.queue_size = 100;\r\n        }\r\n    }\r\n}\r\n\r\nclass Subscribe extends RosbridgeProtocol {\r\n    id: string | undefined;\r\n    private topic: string;\r\n    private type: string | undefined;\r\n    private throttle_rate: number | undefined;\r\n    private queue_length: number | undefined;\r\n    private fragment_size: number | undefined;\r\n    private compression: RosTopicCompression | undefined;\r\n\r\n    constructor(\r\n        topic: string,\r\n        type?: string,\r\n        throttle_rate?: number,\r\n        queue_length?: number,\r\n        fragment_size?: number,\r\n        compression?: RosTopicCompression,\r\n        id?: string\r\n    ) {\r\n        super();\r\n        this.op = 'subscribe';\r\n        this.topic = topic;\r\n        this.id = `subscribe:${this.topic}:${++idCounter}`;\r\n        this.type = type;\r\n        this.throttle_rate = throttle_rate ?? 0;\r\n        this.queue_length = queue_length ?? 0;\r\n        this.fragment_size = fragment_size;\r\n        this.compression = compression ?? 'none';\r\n    }\r\n}\r\n\r\nclass ServiceCall extends RosbridgeProtocol {\r\n    id: string | undefined;\r\n    private service: string;\r\n    private args: Object | undefined = {};\r\n    private fragment_size: number | undefined;\r\n    private compression: 'none' | 'png' | undefined;\r\n\r\n    constructor(\r\n        service: string,\r\n        args?: any,\r\n        id?: string,\r\n        fragment_size?: number,\r\n        compression?: 'none' | 'png'\r\n    ) {\r\n        super();\r\n        this.op = 'call_service';\r\n        this.service = service;\r\n        this.id = id ?? `call_service:${this.service}:${++idCounter}`;\r\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\r\n        this.args = args ?? {};\r\n        this.fragment_size = fragment_size;\r\n        this.compression = compression;\r\n    }\r\n}\r\n\r\nclass AdvertiseService extends RosbridgeProtocol {\r\n    private type: string;\r\n    private service: string;\r\n\r\n    constructor(type: string, service: string) {\r\n        super();\r\n        this.op = 'advertise_service';\r\n        this.type = type;\r\n        this.service = service;\r\n    }\r\n}\r\n\r\nclass UnadvertiseService extends RosbridgeProtocol {\r\n    private service: string;\r\n\r\n    constructor(service: string) {\r\n        super();\r\n        this.op = 'unadvertise_service';\r\n        this.service = service;\r\n    }\r\n}\r\n\r\nclass ServiceRequest extends RosbridgeProtocol {}\r\n\r\nclass ServiceResponse extends RosbridgeProtocol {\r\n    private id: string | undefined;\r\n    private service: string;\r\n    private values: string | undefined;\r\n    private result: boolean;\r\n\r\n    constructor(service: string, result: boolean, values?: any, id?: string) {\r\n        super();\r\n        this.op = 'service_response';\r\n        this.id = id;\r\n        this.service = service;\r\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\r\n        this.values = values ?? {};\r\n        this.result = result;\r\n    }\r\n}\r\n\r\nclass Unsubscribe extends RosbridgeProtocol {\r\n    private id: string | undefined;\r\n    private topic: string;\r\n\r\n    constructor(topic: string, id?: string) {\r\n        super();\r\n        this.op = 'unsubscribe';\r\n        this.topic = topic;\r\n        this.id = id;\r\n    }\r\n}\r\n\r\ninterface RosTopicParam {\r\n    name: string;\r\n    messageType: string;\r\n    compression?: RosTopicCompression;\r\n    throttleRate?: number;\r\n    latch?: boolean;\r\n    queueSize?: number;\r\n    queueLength?: number;\r\n    reconnectOnClose?: boolean;\r\n    ros: Rosbridge;\r\n}\r\n\r\n/**\r\n * RosTopic class used to instantiate a topic, subscribe to its event and advertise future events regarding the topic\r\n */\r\nexport class RosTopic<T extends { toString: () => string }>\r\n    implements RosTopicParam\r\n{\r\n    name: string;\r\n    messageType: string;\r\n    compression?: RosTopicCompression;\r\n    throttleRate?: number;\r\n    latch?: boolean;\r\n    queueSize?: number;\r\n    queueLength?: number;\r\n    reconnectOnClose?: boolean;\r\n    ros: Rosbridge;\r\n    private observable$: Observable<T> | undefined;\r\n    private id: string | undefined;\r\n    private sub: Subscription | undefined;\r\n\r\n    constructor({\r\n        ros,\r\n        name,\r\n        messageType,\r\n        compression = 'none',\r\n        throttleRate = 0,\r\n        latch = false,\r\n        queueSize = 100,\r\n        queueLength = 0,\r\n        reconnectOnClose = true,\r\n    }: RosTopicParam) {\r\n        this.ros = ros;\r\n        this.name = name;\r\n        this.messageType = messageType;\r\n        this.compression = compression;\r\n        this.throttleRate = throttleRate;\r\n        this.latch = latch;\r\n        this.queueSize = queueSize;\r\n        this.queueLength = queueLength;\r\n        this.reconnectOnClose = reconnectOnClose;\r\n\r\n        this.throttleRate = Math.max(this.throttleRate, 0);\r\n    }\r\n\r\n    subscribe(callback: (message: T) => void) {\r\n        const subRequest = new Subscribe(this.name, this.messageType);\r\n        this.observable$ = this.ros.connection$?.pipe(\r\n            filter(\r\n                (data) => data?.topic === this.name && data?.op === 'publish' // eslint-disable-line @typescript-eslint/no-unsafe-member-access\r\n            ),\r\n            pluck('msg')\r\n        );\r\n        this.sub = this.observable$?.subscribe((message: T) =>\r\n            callback(message)\r\n        );\r\n        this.id = subRequest.id;\r\n        this.ros.sendRequest(subRequest);\r\n    }\r\n\r\n    unsubscribe() {\r\n        const unsubRequest = new Unsubscribe(this.name, this.id);\r\n        this.ros.sendRequest(unsubRequest);\r\n        this.sub?.unsubscribe();\r\n    }\r\n\r\n    advertise() {\r\n        const advertiseRequest = new Advertise(\r\n            this.name,\r\n            this.messageType,\r\n            this.id,\r\n            this.latch,\r\n            this.queueSize\r\n        );\r\n        this.id = advertiseRequest.id;\r\n        this.ros.sendRequest(advertiseRequest);\r\n    }\r\n\r\n    publish(msg: T) {\r\n        const publishRequest = new Publish(\r\n            this.name,\r\n            msg,\r\n            this.id,\r\n            this.latch,\r\n            this.queueSize\r\n        );\r\n        this.ros.sendRequest(publishRequest);\r\n    }\r\n\r\n    unadvertise() {\r\n        const unadvertiseRequest = new Unadvertise(this.name, this.id);\r\n        this.ros.sendRequest(unadvertiseRequest);\r\n    }\r\n}\r\n\r\ninterface RosServiceParams {\r\n    name: string;\r\n    serviceType: string;\r\n    ros: Rosbridge;\r\n}\r\n\r\ninterface RosParamParams {\r\n    name: string;\r\n    ros: Rosbridge;\r\n}\r\n\r\nexport class RosService<\r\n    T_REQ extends { toString: () => string },\r\n    T_RES extends { toString: () => string }\r\n> implements RosServiceParams\r\n{\r\n    name: string;\r\n    ros: Rosbridge;\r\n    serviceType: string;\r\n    private id: number | undefined;\r\n    private isAdvertised: boolean = false;\r\n\r\n    constructor({ ros, name, serviceType }: RosServiceParams) {\r\n        this.ros = ros;\r\n        this.name = name;\r\n        this.serviceType = serviceType;\r\n    }\r\n\r\n    advertise(callback: (req: T_REQ) => T_RES) {\r\n        const serviceAdvertiseRequest = new AdvertiseService(\r\n            this.serviceType,\r\n            this.name\r\n        );\r\n        this.ros.connection$\r\n            ?.pipe(\r\n                filter(\r\n                    (data) =>\r\n                        data?.service === this.name && // eslint-disable-line @typescript-eslint/no-unsafe-member-access\r\n                        data?.op === 'call_service' // eslint-disable-line @typescript-eslint/no-unsafe-member-access\r\n                ),\r\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\r\n                map(({ args, id }) => ({ args, id }))\r\n            )\r\n            .subscribe((req: { args: T_REQ; id?: string }) => {\r\n                const res = callback(req.args);\r\n                const serviceResponse = new ServiceResponse(\r\n                    this.name,\r\n                    true,\r\n                    res,\r\n                    req.id ?? ''\r\n                );\r\n                this.ros.sendRequest(serviceResponse);\r\n            });\r\n\r\n        this.ros.sendRequest(serviceAdvertiseRequest);\r\n        this.isAdvertised = true;\r\n    }\r\n\r\n    call(\r\n        req: T_REQ,\r\n        callback: (res: T_RES) => void,\r\n        failedCallback?: (res: any) => void\r\n    ) {\r\n        const serviceCallRequest = new ServiceCall(this.name, req);\r\n        this.ros.connection$\r\n            ?.pipe(\r\n                filter(\r\n                    (data) =>\r\n                        data?.service === this.name && // eslint-disable-line @typescript-eslint/no-unsafe-member-access\r\n                        data?.id === serviceCallRequest.id && // eslint-disable-line @typescript-eslint/no-unsafe-member-access\r\n                        data?.op === 'service_response' // eslint-disable-line @typescript-eslint/no-unsafe-member-access\r\n                ),\r\n                tap((msg) => {\r\n                    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\r\n                    if (msg?.result !== undefined && msg?.result === false)\r\n                        if (failedCallback) {\r\n                            // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\r\n                            failedCallback(msg.values);\r\n                        }\r\n                }),\r\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\r\n                filter((data) => data?.result !== false),\r\n                pluck('values'),\r\n                take(1)\r\n            )\r\n            .subscribe((message: T_RES) => callback(message));\r\n        this.ros.sendRequest(serviceCallRequest);\r\n    }\r\n\r\n    unadvertise() {\r\n        if (!this.isAdvertised) return;\r\n        const serviceUnadvertiseRequest = new UnadvertiseService(this.name);\r\n        this.ros.sendRequest(serviceUnadvertiseRequest);\r\n    }\r\n}\r\n\r\nexport class RosParam<T extends { toString: () => string }>\r\n    implements RosParamParams\r\n{\r\n    name: string;\r\n    ros: Rosbridge;\r\n\r\n    constructor({ ros, name }: RosParamParams) {\r\n        this.ros = ros;\r\n        this.name = name;\r\n    }\r\n\r\n    get(callback: (res: T) => void) {\r\n        const paramService = new RosService<{ name: string }, { value: T }>({\r\n            ros: this.ros,\r\n            name: '/rosapi/get_param',\r\n            serviceType: 'rosapi/GetParam',\r\n        });\r\n        paramService.call({ name: this.name }, (res) => {\r\n            // @ts-ignore\r\n            callback(JSON.parse(res.value));\r\n        });\r\n    }\r\n\r\n    set(newValue: T, callback: () => void) {\r\n        const paramService = new RosService<\r\n            { name: string; value: string },\r\n            {}\r\n        >({\r\n            ros: this.ros,\r\n            name: '/rosapi/set_param',\r\n            serviceType: 'rosapi/SetParam',\r\n        });\r\n        paramService.call(\r\n            { name: this.name, value: JSON.stringify(newValue) },\r\n            () => {\r\n                callback();\r\n            }\r\n        );\r\n    }\r\n\r\n    delete(callback: () => void) {\r\n        const paramService = new RosService<{ name: string }, {}>({\r\n            ros: this.ros,\r\n            name: '/rosapi/delete_param',\r\n            serviceType: 'rosapi/DeleteParam',\r\n        });\r\n\r\n        paramService.call({ name: this.name }, () => {\r\n            callback();\r\n        });\r\n    }\r\n}\r\n\r\ntype StatusMessageLevel = 'info' | 'warning' | 'error' | 'none';\r\n\r\ntype RosbridgeOperation =\r\n    | 'fragment'\r\n    | 'png'\r\n    | 'set_level'\r\n    | 'status'\r\n    | 'auth'\r\n    | 'advertise'\r\n    | 'unadvertise'\r\n    | 'subscribe'\r\n    | 'unsubscribe'\r\n    | 'call_service'\r\n    | 'advertise_service'\r\n    | 'unadvertise_service'\r\n    | 'service_request'\r\n    | 'service_response'\r\n    | 'publish';\r\n\r\ntype RosLibTransportLibrary =\r\n    | 'websocket'\r\n    | 'socket.io'\r\n    | 'RTCPeerConnection'\r\n    | 'workerSocket';\r\n\r\ntype RosTopicCompression = 'png' | 'cbor' | 'cbor-raw' | 'none';\r\n","export interface NumberMessage {\n    data: number;\n}\n\nexport interface NumberArrayMessage {\n    data: number[];\n}\n\nexport interface BoolMessage {\n    data: boolean;\n}\n\nexport interface StringMessage {\n    data: string;\n}\n\nexport interface ImuMessage {\n    header: RosMsgHeader;\n    orientation?: QuaternionMessage | null;\n    orientation_covariance?: number[] | null;\n    angular_velocity?: Vector3Message | null;\n    angular_velocity_covariance?: number[] | null;\n    linear_acceleration?: Vector3Message | null;\n    linear_acceleration_covariance?: number[] | null;\n}\n\nexport interface PointStampedMessage {\n    header: RosMsgHeader;\n    point?: Vector3Message;\n}\n\nexport interface Vector3Message {\n    x?: number | null;\n    y?: number | null;\n    z?: number | null;\n}\n\nexport interface QuaternionMessage {\n    x?: number | null;\n    y?: number | null;\n    z?: number | null;\n    w?: number | null;\n}\n\nexport interface JoyMessage {\n    header: RosMsgHeader;\n    axes?: number[] | null;\n    buttons?: number[] | null;\n}\n\nexport interface RosoutMessage {\n    header: RosMsgHeader;\n    level?: RosoutLevel | null;\n    name?: string | null;\n    msg?: string | null;\n    file?: string | null;\n    func?: string | null;\n    line?: number | null;\n    topics?: string[] | null;\n}\n\nexport interface RosMsgHeader {\n    seq?: number | null;\n    stamp?: RosTime | null;\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    frame_id?: string | null;\n}\n\nexport interface RosTime {\n    secs?: number | null;\n    nsecs?: number | null;\n}\n\nexport enum RosoutLevel {\n    DEBUG = 1,\n    INFO = 2,\n    WARN = 4,\n    ERROR = 8,\n    FATAL = 16,\n}\n","/*\n * Public API Surface of ngx-roslib\n */\n\nexport * from './lib/ngx-roslib.service';\nexport * from './lib/ros-message.model';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}