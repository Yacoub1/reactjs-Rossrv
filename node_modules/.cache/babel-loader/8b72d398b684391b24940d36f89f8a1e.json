{"ast":null,"code":"var _jsxFileName = \"/home/robotuser10/Downloads/my-app/src/components/Map.jsx\";\nimport React, { Component } from 'react';\nimport Config from \"../scripts/config\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Map extends Component {\n  constructor() {\n    super();\n    this.state = {\n      ros: null\n    };\n    this.view_map = this.view_map.bind(this);\n  } // create a pose subscriber\n\n\n  init_connection() {\n    console.log(\"Establish map connection\");\n\n    try {\n      this.state.ros = new window.ROSLIB.Ros();\n      this.state.ros.connect(\"ws://\" + Config.ROSBRIDGE_SERVER_IP + \":\" + Config.RSOBRIDGE_PORT + \"\");\n      console.log(\"In map components\");\n    } catch (error) {\n      console.log(\"Connection problem in map components\");\n    }\n  }\n\n  componentDidMount() {\n    this.init_connection();\n    this.view_map();\n  }\n\n  view_map() {\n    var viewer = new window.ROS2D.Viewer({\n      divID: \"nav_div\",\n      width: 640,\n      height: 480\n    });\n    var navClient = new window.NAV2D.OccupancyGridClientNav({\n      ros: this.state.ros,\n      rootObject: viewer.scene,\n      viewer: viewer,\n      serverName: \"/move_base\",\n      withOrientation: true\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"nav_div\",\n        children: \"viewer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Map;","map":{"version":3,"sources":["/home/robotuser10/Downloads/my-app/src/components/Map.jsx"],"names":["React","Component","Config","Map","constructor","state","ros","view_map","bind","init_connection","console","log","window","ROSLIB","Ros","connect","ROSBRIDGE_SERVER_IP","RSOBRIDGE_PORT","error","componentDidMount","viewer","ROS2D","Viewer","divID","width","height","navClient","NAV2D","OccupancyGridClientNav","rootObject","scene","serverName","withOrientation","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;;AAGA,MAAMC,GAAN,SAAkBF,SAAlB,CAA4B;AAG1BG,EAAAA,WAAW,GAAE;AACX;AADW,SAFbC,KAEa,GAFL;AAACC,MAAAA,GAAG,EAAE;AAAN,KAEK;AAEX,SAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcC,IAAd,CAAmB,IAAnB,CAAhB;AACD,GANyB,CAO1B;;;AACAC,EAAAA,eAAe,GAAE;AACfC,IAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;;AAEE,QAAG;AACD,WAAKN,KAAL,CAAWC,GAAX,GAAiB,IAAIM,MAAM,CAACC,MAAP,CAAcC,GAAlB,EAAjB;AACA,WAAKT,KAAL,CAAWC,GAAX,CAAeS,OAAf,CACE,UAAQb,MAAM,CAACc,mBAAf,GAAmC,GAAnC,GAAuCd,MAAM,CAACe,cAA9C,GAA6D,EAD/D;AAGAP,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACD,KAND,CAMC,OAAMO,KAAN,EAAa;AACZR,MAAAA,OAAO,CAACC,GAAR,CAAY,sCAAZ;AACD;AACF;;AAEJQ,EAAAA,iBAAiB,GAAE;AACd,SAAKV,eAAL;AACA,SAAKF,QAAL;AACD;;AAEJA,EAAAA,QAAQ,GAAE;AACR,QAAIa,MAAM,GAAG,IAAIR,MAAM,CAACS,KAAP,CAAaC,MAAjB,CAAwB;AACnCC,MAAAA,KAAK,EAAE,SAD4B;AAEnCC,MAAAA,KAAK,EAAE,GAF4B;AAGnCC,MAAAA,MAAM,EAAE;AAH2B,KAAxB,CAAb;AAKA,QAAIC,SAAS,GAAG,IAAId,MAAM,CAACe,KAAP,CAAaC,sBAAjB,CAAwC;AACrDtB,MAAAA,GAAG,EAAE,KAAKD,KAAL,CAAWC,GADqC;AAErDuB,MAAAA,UAAU,EAAET,MAAM,CAACU,KAFkC;AAGrDV,MAAAA,MAAM,EAAEA,MAH6C;AAIrDW,MAAAA,UAAU,EAAE,YAJyC;AAKrDC,MAAAA,eAAe,EAAE;AALoC,KAAxC,CAAhB;AAOD;;AAGAC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,6BACE;AAAK,QAAA,EAAE,EAAC,SAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAjDyB;;AAmD5B,eAAe9B,GAAf","sourcesContent":["import React, {Component} from 'react';\nimport Config from \"../scripts/config\";\n\n\nclass Map extends Component {\n  state = {ros: null};\n\n  constructor(){\n    super();\n    this.view_map = this.view_map.bind(this);\n  }\n  // create a pose subscriber\n  init_connection(){\n    console.log(\"Establish map connection\");\n\n      try{\n        this.state.ros = new window.ROSLIB.Ros();\n        this.state.ros.connect(\n          \"ws://\"+Config.ROSBRIDGE_SERVER_IP+\":\"+Config.RSOBRIDGE_PORT+\"\"\n        );\n        console.log(\"In map components\");\n      }catch(error) {\n        console.log(\"Connection problem in map components\");\n      }\n    }\n\n componentDidMount(){\n      this.init_connection();\n      this.view_map();\n    }\n\n view_map(){\n   var viewer = new window.ROS2D.Viewer({\n     divID: \"nav_div\",\n     width: 640,\n     height: 480\n   });\n   var navClient = new window.NAV2D.OccupancyGridClientNav({\n      ros: this.state.ros,\n      rootObject: viewer.scene,\n      viewer: viewer,\n      serverName: \"/move_base\",\n      withOrientation: true\n   });\n }\n\n\n  render (){\n    return(\n      <div>\n        <div id=\"nav_div\">viewer</div>\n      </div>\n      );\n  }\n}\nexport default Map;\n"]},"metadata":{},"sourceType":"module"}