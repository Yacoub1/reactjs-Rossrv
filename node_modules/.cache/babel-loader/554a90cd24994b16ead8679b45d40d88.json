{"ast":null,"code":"var _jsxFileName = \"/home/robotuser10/ur10_catkinworkspace/my-app/src/components/Rossrv.jsx\";\nimport React, { Component } from 'react';\nimport Config from \"../scripts/config\";\nimport { Row, Col, Container, Button } from \"react-bootstrap\";\nimport Slider, { createSliderWithTooltip } from 'rc-slider';\nimport 'rc-slider/assets/index.css'; //import { RosService } from 'ngx-roslib';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Rossrv extends Component {\n  constructor() {\n    super();\n    this.state = {\n      ros: null,\n      speed: 10,\n      force: 70,\n      pose: 0\n    };\n\n    this.onAfterChange = value => {\n      console.log(value); //eslint-disable-line\n    };\n\n    this.onSpeedSliderChange = value => {\n      this.log(\"Speed: \");\n      this.log(this.state.speed);\n      this.setState({\n        speed: value\n      });\n      console.log(\"Speed: \" + this.state.speed);\n    };\n\n    this.onPoseSliderChange = value => {\n      this.log(\"Pose: \");\n      this.log(this.state.pose);\n      this.setState({\n        pose: value\n      });\n      console.log(\"Pose: \" + this.state.pose);\n    };\n\n    this.onForceSliderChange = value => {\n      this.log(\"Force: \");\n      this.log(this.state.force);\n      this.setState({\n        force: value\n      });\n      console.log(\"Force: \" + this.state.force);\n    };\n\n    this.init_connection();\n    this.call_rossrv = this.call_rossrv.bind(this);\n    this.onSpeedSliderChange = this.onSpeedSliderChange.bind(this);\n    this.onPoseSliderChange = this.onPoseSliderChange.bind(this);\n    this.onForceSliderChange = this.onForceSliderChange.bind(this);\n  }\n\n  log(value) {\n    console.log(value); //eslint-disable-line\n  }\n\n  // create a pose subscriber\n  init_connection() {\n    console.log(\"Establish map connection\");\n\n    try {\n      this.state.ros = new window.ROSLIB.Ros();\n      this.state.ros.connect(\"ws://\" + Config.ROSBRIDGE_SERVER_IP + \":\" + Config.RSOBRIDGE_PORT + \"\");\n      console.log(\"Rose Service Component\");\n    } catch (error) {\n      console.log(\"Connection problem in ROS Service Component\");\n    }\n  }\n\n  componentDidMount() {}\n\n  call_rossrv() {\n    console.log(\"Button clicked\");\n    var robotiq_gripper = new window.ROSLIB.Service({\n      ros: this.state.ros,\n      name: '/add_two_ints',\n      serviceType: 'ur_robotiq_ctl/AddTwoInts'\n    });\n    var request = new window.ROSLIB.ServiceRequest({\n      a: this.state.force,\n      b: this.state.pose\n    });\n    robotiq_gripper.callService(request, function (result) {\n      console.log('Result for service call on ' + robotiq_gripper.name + ': ' + result.sum);\n    });\n    console.log(request);\n\n    var _2f140_force = new window.ROSLIB.Param({\n      ros: this.state.ros,\n      name: '/2f140_force'\n    });\n\n    _2f140_force.set(this.state.force);\n\n    _2f140_force.get(function (value) {\n      console.log('MAX VAL: ' + value);\n    });\n\n    var cmd_vel = new window.ROSLIB.Topic({\n      ros: this.state.ros,\n      name: '/ros_react',\n      messageType: \"std_msgs/Sring\"\n    });\n    var msg = new window.ROSLIB.Message({\n      data: \"Hello World\"\n    }); // Publish combined mesg\n\n    cmd_vel.publish(msg);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Speed:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Slider, {\n          value: this.state.speed,\n          onChange: this.onSpeedSliderChange,\n          onAfterChange: this.onAfterChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 12\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Pose:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Slider, {\n          value: this.state.pose,\n          onChange: this.onPoseSliderChange,\n          onAfterChange: this.onAfterChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Force:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(Slider, {\n          value: this.state.force,\n          onChange: this.onForceSliderChange,\n          onAfterChange: this.onAfterChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 10\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => this.call_rossrv(),\n          children: \"Request ROS SRV\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default Rossrv;","map":{"version":3,"sources":["/home/robotuser10/ur10_catkinworkspace/my-app/src/components/Rossrv.jsx"],"names":["React","Component","Config","Row","Col","Container","Button","Slider","createSliderWithTooltip","Rossrv","constructor","state","ros","speed","force","pose","onAfterChange","value","console","log","onSpeedSliderChange","setState","onPoseSliderChange","onForceSliderChange","init_connection","call_rossrv","bind","window","ROSLIB","Ros","connect","ROSBRIDGE_SERVER_IP","RSOBRIDGE_PORT","error","componentDidMount","robotiq_gripper","Service","name","serviceType","request","ServiceRequest","a","b","callService","result","sum","_2f140_force","Param","set","get","cmd_vel","Topic","messageType","msg","Message","data","publish","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport Config from \"../scripts/config\";\nimport {Row,Col, Container, Button} from \"react-bootstrap\";\nimport Slider, { createSliderWithTooltip } from 'rc-slider';\nimport 'rc-slider/assets/index.css'\n//import { RosService } from 'ngx-roslib';\n\nclass Rossrv extends Component {\n  state = {ros: null,\n          speed: 10,\n          force:70,\n          pose:0\n              };\n\n  constructor(){\n    super();\n    this.init_connection();\n    this.call_rossrv = this.call_rossrv.bind(this);\n    this.onSpeedSliderChange = this.onSpeedSliderChange.bind(this);\n    this.onPoseSliderChange = this.onPoseSliderChange.bind(this);\n    this.onForceSliderChange = this.onForceSliderChange.bind(this);\n    }\n  log(value) {\n        console.log(value); //eslint-disable-line\n      }\n\n  onAfterChange = value => {\n      console.log(value); //eslint-disable-line\n  };\n  // create a pose subscriber\n  init_connection(){\n    console.log(\"Establish map connection\");\n\n      try{\n        this.state.ros = new window.ROSLIB.Ros();\n        this.state.ros.connect(\n          \"ws://\"+Config.ROSBRIDGE_SERVER_IP+\":\"+Config.RSOBRIDGE_PORT+\"\"\n        );\n        console.log(\"Rose Service Component\");\n      }catch(error) {\n        console.log(\"Connection problem in ROS Service Component\");\n      }\n    }\n\n componentDidMount(){\n\n    }\n\n  onSpeedSliderChange = value => {\n        this.log(\"Speed: \");\n        this.log(this.state.speed);\n        this.setState({\n          speed:value,\n        });\n        console.log(\"Speed: \"+this.state.speed);\n      };\n\n  onPoseSliderChange = value => {\n            this.log(\"Pose: \");\n            this.log(this.state.pose);\n            this.setState({\n              pose: value,\n            });\n            console.log(\"Pose: \"+this.state.pose);\n          };\n\n  onForceSliderChange = value => {\n          this.log(\"Force: \");\n          this.log(this.state.force);\n          this.setState({\n            force:value,\n          });\n          console.log(\"Force: \"+this.state.force);\n        };\n\n  call_rossrv(){\n    console.log(\"Button clicked\")\n\n    var robotiq_gripper = new window.ROSLIB.Service({\n                          ros : this.state.ros,\n                          name : '/add_two_ints',\n                          serviceType : 'ur_robotiq_ctl/AddTwoInts'\n                          });\n\n    var request = new window.ROSLIB.ServiceRequest({\n                              a: this.state.force,\n                              b : this.state.pose,\n                            });\n\n    robotiq_gripper.callService(request, function(result) {\n    console.log('Result for service call on '\n      + robotiq_gripper.name\n      + ': '\n      + result.sum);\n  });\n  console.log(request);\n\n  var _2f140_force = new window.ROSLIB.Param({\n    ros : this.state.ros,\n    name : '/2f140_force'\n  });\n\n  _2f140_force.set(this.state.force);\n  _2f140_force.get(function(value) {\n    console.log('MAX VAL: ' + value);\n  });\n  var cmd_vel = new window.ROSLIB.Topic({\n    ros: this.state.ros,\n    name: '/ros_react',\n    messageType: \"std_msgs/Sring\",\n  });\n\n  var msg = new window.ROSLIB.Message({\n    data: \"Hello World\"\n  });\n  // Publish combined mesg\n  cmd_vel.publish(msg);\n}\n\n\nrender() {\n      return (\n        <Container>\n          <div>\n          <h3>Speed:</h3>\n           <Slider\n                value={this.state.speed}\n                onChange={this.onSpeedSliderChange}\n                onAfterChange={this.onAfterChange}\n          />\n          </div>\n          <div>\n          <h3>Pose:</h3>\n          <Slider\n               value={this.state.pose}\n               onChange={this.onPoseSliderChange}\n               onAfterChange={this.onAfterChange}\n         />\n         </div>\n         <div>\n         <h3>Force:</h3>\n         <Slider\n              value={this.state.force}\n              onChange={this.onForceSliderChange}\n              onAfterChange={this.onAfterChange}\n        />\n        </div>\n        <div>\n        <button type=\"button\" onClick={() => this.call_rossrv()}>Request ROS SRV</button>\n        </div>\n      </Container>\n      );\n      }\n}\nexport default Rossrv;\n"]},"metadata":{},"sourceType":"module"}