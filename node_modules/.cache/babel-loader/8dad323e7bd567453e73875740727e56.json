{"ast":null,"code":"var _jsxFileName = \"/home/robotuser10/ur10_catkinworkspace/my-app/src/components/Rossrv.jsx\";\nimport React, { Component } from 'react';\nimport Config from \"../scripts/config\";\nimport { Row, Col, Container, Button } from \"react-bootstrap\";\nimport Slider, { createSliderWithTooltip } from 'rc-slider';\nimport 'rc-slider/assets/index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Rossrv extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      ros: null,\n      speed: 1,\n      force: 5,\n      pose: 0\n    };\n\n    this.onSliderChange = value => {\n      this.log(value);\n      this.setState({\n        value\n      });\n    };\n\n    this.onAfterChange = value => {\n      console.log(value); //eslint-disable-line\n    };\n\n    this.onSpeedSliderChange = speed => {\n      this.log(\"Speed: \");\n      this.log(speed);\n      this.setState({\n        speed\n      });\n    };\n\n    this.onPoseSliderChange = pose => {\n      this.log(\"Pose: \");\n      this.log(pose);\n      this.setState({\n        pose\n      });\n    };\n\n    this.onForceSliderChange = force => {\n      this.log(\"Force: \");\n      this.log(force);\n      this.setState({\n        force\n      });\n    };\n\n    this.call_rossrv = this.call_rossrv.bind(this);\n  }\n\n  log(value) {\n    console.log(value); //eslint-disable-line\n  }\n\n  // create a pose subscriber\n  init_connection() {\n    console.log(\"Establish map connection\");\n\n    try {\n      this.state.ros = new window.ROSLIB.Ros();\n      this.state.ros.connect(\"ws://\" + Config.ROSBRIDGE_SERVER_IP + \":\" + Config.RSOBRIDGE_PORT + \"\");\n      console.log(\"Rose Service Component\");\n    } catch (error) {\n      console.log(\"Connection problem in ROS Service Component\");\n    }\n  }\n\n  componentDidMount() {\n    this.init_connection();\n  }\n\n  call_rossrv() {\n    var robotiq_gripper = new window.ROSLIB.Service({\n      ros: this.state.ros,\n      name: '/grip_service',\n      serviceType: 'ur_robotiq_ctl/grip_service'\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Slider, {\n          value: this.state.speed,\n          onChange: this.onSpeedSliderChange,\n          onAfterChange: this.onAfterChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 12\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Slider, {\n          value: this.state.pose,\n          onChange: this.onPoseSliderChange,\n          onAfterChange: this.onAfterChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Slider, {\n          value: this.state.force,\n          onChange: this.onForceSliderChange,\n          onAfterChange: this.onAfterChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 10\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => this.call_rossrv(),\n          className: \"btn btn-success\",\n          children: \"Request ROS SRV\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default Rossrv;","map":{"version":3,"sources":["/home/robotuser10/ur10_catkinworkspace/my-app/src/components/Rossrv.jsx"],"names":["React","Component","Config","Row","Col","Container","Button","Slider","createSliderWithTooltip","Rossrv","constructor","props","state","ros","speed","force","pose","onSliderChange","value","log","setState","onAfterChange","console","onSpeedSliderChange","onPoseSliderChange","onForceSliderChange","call_rossrv","bind","init_connection","window","ROSLIB","Ros","connect","ROSBRIDGE_SERVER_IP","RSOBRIDGE_PORT","error","componentDidMount","robotiq_gripper","Service","name","serviceType","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport Config from \"../scripts/config\";\nimport {Row,Col, Container, Button} from \"react-bootstrap\";\nimport Slider, { createSliderWithTooltip } from 'rc-slider';\nimport 'rc-slider/assets/index.css'\n\n\n\n\nclass Rossrv extends Component {\n  state = {ros: null,\n          speed: 1,\n          force:5,\n          pose:0\n              };\n\n  constructor(props){\n    super(props);\n    this.call_rossrv = this.call_rossrv.bind(this);\n    }\n  log(value) {\n        console.log(value); //eslint-disable-line\n      }\n\n  onSliderChange = value => {\n    this.log(value);\n    this.setState({ value });\n  };\n  onAfterChange = value => {\n      console.log(value); //eslint-disable-line\n  };\n  // create a pose subscriber\n  init_connection(){\n    console.log(\"Establish map connection\");\n\n      try{\n        this.state.ros = new window.ROSLIB.Ros();\n        this.state.ros.connect(\n          \"ws://\"+Config.ROSBRIDGE_SERVER_IP+\":\"+Config.RSOBRIDGE_PORT+\"\"\n        );\n        console.log(\"Rose Service Component\");\n      }catch(error) {\n        console.log(\"Connection problem in ROS Service Component\");\n      }\n    }\n\n componentDidMount(){\n      this.init_connection();\n    }\n\n  onSpeedSliderChange = speed => {\n        this.log(\"Speed: \");\n        this.log(speed);\n        this.setState({\n          speed,\n        });\n      };\n\n  onPoseSliderChange = pose => {\n            this.log(\"Pose: \");\n            this.log(pose);\n            this.setState({\n              pose,\n            });\n          };\n\nonForceSliderChange = force => {\n          this.log(\"Force: \");\n          this.log(force);\n          this.setState({\n            force,\n          });\n        };\ncall_rossrv(){\n  var robotiq_gripper = new window.ROSLIB.Service({\n                        ros : this.state.ros,\n                        name : '/grip_service',\n                        serviceType : 'ur_robotiq_ctl/grip_service'\n                        });\n\n}\nrender() {\n      return (\n        <Container>\n          <div>\n           <Slider\n                value={this.state.speed}\n                onChange={this.onSpeedSliderChange}\n                onAfterChange={this.onAfterChange}\n          />\n          </div>\n          <div>\n          <Slider\n               value={this.state.pose}\n               onChange={this.onPoseSliderChange}\n               onAfterChange={this.onAfterChange}\n         />\n         </div>\n         <div>\n         <Slider\n              value={this.state.force}\n              onChange={this.onForceSliderChange}\n              onAfterChange={this.onAfterChange}\n        />\n        </div>\n        <div>\n        <button type=\"button\" onClick={()=> this.call_rossrv()} className=\"btn btn-success\">Request ROS SRV</button>\n        </div>\n      </Container>\n  );\n      }\n}\nexport default Rossrv;\n"]},"metadata":{},"sourceType":"module"}