{"ast":null,"code":"var _jsxFileName = \"/home/robotuser10/Downloads/my-app/src/components/Rossrv.jsx\";\nimport React, { Component } from 'react';\nimport Config from \"../scripts/config\";\nimport { Row, Col, Container, Button } from \"react-bootstrap\";\nimport Slider, { Range } from 'rc-slider';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Rossrv extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      ros: null,\n      min: 1,\n      max: 100,\n      step: 10,\n      value: 1\n    };\n  } // create a pose subscriber\n\n\n  init_connection() {\n    console.log(\"Establish map connection\");\n\n    try {\n      this.state.ros = new window.ROSLIB.Ros();\n      this.state.ros.connect(\"ws://\" + Config.ROSBRIDGE_SERVER_IP + \":\" + Config.RSOBRIDGE_PORT + \"\");\n      console.log(\"In map components\");\n    } catch (error) {\n      console.log(\"Connection problem in map components\");\n    }\n  }\n\n  componentDidMount() {\n    this.init_connection();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(RangeSlider, {\n      value: value,\n      onChange: changeEvent => setValue(changeEvent.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 12\n    }, this);\n  }\n\n}\n\nexport default Rossrv;","map":{"version":3,"sources":["/home/robotuser10/Downloads/my-app/src/components/Rossrv.jsx"],"names":["React","Component","Config","Row","Col","Container","Button","Slider","Range","Rossrv","constructor","props","state","ros","min","max","step","value","init_connection","console","log","window","ROSLIB","Ros","connect","ROSBRIDGE_SERVER_IP","RSOBRIDGE_PORT","error","componentDidMount","render","changeEvent","setValue","target"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAAQC,GAAR,EAAYC,GAAZ,EAAiBC,SAAjB,EAA4BC,MAA5B,QAAyC,iBAAzC;AACA,OAAOC,MAAP,IAAiBC,KAAjB,QAA8B,WAA9B;;;AAKA,MAAMC,MAAN,SAAqBR,SAArB,CAA+B;AAQ7BS,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AADgB,SAPlBC,KAOkB,GAPV;AAACC,MAAAA,GAAG,EAAE,IAAN;AACAC,MAAAA,GAAG,EAAE,CADL;AAEAC,MAAAA,GAAG,EAAE,GAFL;AAGAC,MAAAA,IAAI,EAAE,EAHN;AAIAC,MAAAA,KAAK,EAAE;AAJP,KAOU;AAGf,GAX0B,CAY7B;;;AACAC,EAAAA,eAAe,GAAE;AACfC,IAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;;AAEE,QAAG;AACD,WAAKR,KAAL,CAAWC,GAAX,GAAiB,IAAIQ,MAAM,CAACC,MAAP,CAAcC,GAAlB,EAAjB;AACA,WAAKX,KAAL,CAAWC,GAAX,CAAeW,OAAf,CACE,UAAQtB,MAAM,CAACuB,mBAAf,GAAmC,GAAnC,GAAuCvB,MAAM,CAACwB,cAA9C,GAA6D,EAD/D;AAGAP,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACD,KAND,CAMC,OAAMO,KAAN,EAAa;AACZR,MAAAA,OAAO,CAACC,GAAR,CAAY,sCAAZ;AACD;AACF;;AAEJQ,EAAAA,iBAAiB,GAAE;AACd,SAAKV,eAAL;AACD;;AAIHW,EAAAA,MAAM,GAAG;AAEP,wBAAO,QAAC,WAAD;AACL,MAAA,KAAK,EAAEZ,KADF;AAEL,MAAA,QAAQ,EAAEa,WAAW,IAAIC,QAAQ,CAACD,WAAW,CAACE,MAAZ,CAAmBf,KAApB;AAF5B;AAAA;AAAA;AAAA;AAAA,YAAP;AAKD;;AAxC4B;;AA0C/B,eAAeR,MAAf","sourcesContent":["import React, {Component} from 'react';\nimport Config from \"../scripts/config\";\nimport {Row,Col, Container, Button} from \"react-bootstrap\";\nimport Slider, { Range } from 'rc-slider';\n\n\n\n\nclass Rossrv extends Component {\n  state = {ros: null,\n          min: 1,\n          max: 100,\n          step: 10,\n          value: 1,\n              };\n\n  constructor(props){\n    super(props);\n\n    }\n  // create a pose subscriber\n  init_connection(){\n    console.log(\"Establish map connection\");\n\n      try{\n        this.state.ros = new window.ROSLIB.Ros();\n        this.state.ros.connect(\n          \"ws://\"+Config.ROSBRIDGE_SERVER_IP+\":\"+Config.RSOBRIDGE_PORT+\"\"\n        );\n        console.log(\"In map components\");\n      }catch(error) {\n        console.log(\"Connection problem in map components\");\n      }\n    }\n\n componentDidMount(){\n      this.init_connection();\n    }\n\n\n\n  render (){\n\n    return(<RangeSlider\n      value={value}\n      onChange={changeEvent => setValue(changeEvent.target.value)}\n    />\n);\n  }\n}\nexport default Rossrv;\n"]},"metadata":{},"sourceType":"module"}