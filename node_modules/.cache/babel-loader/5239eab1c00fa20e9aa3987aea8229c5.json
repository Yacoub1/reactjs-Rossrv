{"ast":null,"code":"var _jsxFileName = \"/home/robotuser10/Downloads/my-app/src/components/Rossrv.jsx\";\nimport React, { Component } from 'react';\nimport Config from \"../scripts/config\";\nimport { Row, Col, Container, Button } from \"react-bootstrap\";\nimport { RangeStepInput, forceNumber } from 'react-range-step-input';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Rossrv extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      ros: null,\n      value: 50\n    };\n    this.onChange = this.onChange.bind(this);\n  } // create a pose subscriber\n\n\n  init_connection() {\n    console.log(\"Establish map connection\");\n\n    try {\n      this.state.ros = new window.ROSLIB.Ros();\n      this.state.ros.connect(\"ws://\" + Config.ROSBRIDGE_SERVER_IP + \":\" + Config.RSOBRIDGE_PORT + \"\");\n      console.log(\"In map components\");\n    } catch (error) {\n      console.log(\"Connection problem in map components\");\n    }\n  }\n\n  componentDidMount() {\n    this.init_connection();\n    this.onChange();\n  }\n\n  onChange(e) {\n    const newVal = forceNumber(e.target.value);\n    this.setState({\n      value: newVal\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Here's an example RangeStepInput:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(RangeStepInput, {\n        min: 0,\n        max: 100,\n        value: this.state.value,\n        step: 1,\n        onChange: this.onChange.bind(this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default Rossrv;","map":{"version":3,"sources":["/home/robotuser10/Downloads/my-app/src/components/Rossrv.jsx"],"names":["React","Component","Config","Row","Col","Container","Button","RangeStepInput","forceNumber","Rossrv","constructor","props","state","ros","value","onChange","bind","init_connection","console","log","window","ROSLIB","Ros","connect","ROSBRIDGE_SERVER_IP","RSOBRIDGE_PORT","error","componentDidMount","e","newVal","target","setState","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAAQC,GAAR,EAAYC,GAAZ,EAAiBC,SAAjB,EAA4BC,MAA5B,QAAyC,iBAAzC;AACA,SAAQC,cAAR,EAAuBC,WAAvB,QAAyC,wBAAzC;;;AAKA,MAAMC,MAAN,SAAqBR,SAArB,CAA+B;AAK7BS,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AADgB,SAJlBC,KAIkB,GAJV;AAACC,MAAAA,GAAG,EAAE,IAAN;AACEC,MAAAA,KAAK,EAAE;AADT,KAIU;AAEhB,SAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcC,IAAd,CAAmB,IAAnB,CAAhB;AACC,GAR0B,CAS7B;;;AACAC,EAAAA,eAAe,GAAE;AACfC,IAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;;AAEE,QAAG;AACD,WAAKP,KAAL,CAAWC,GAAX,GAAiB,IAAIO,MAAM,CAACC,MAAP,CAAcC,GAAlB,EAAjB;AACA,WAAKV,KAAL,CAAWC,GAAX,CAAeU,OAAf,CACE,UAAQrB,MAAM,CAACsB,mBAAf,GAAmC,GAAnC,GAAuCtB,MAAM,CAACuB,cAA9C,GAA6D,EAD/D;AAGAP,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACD,KAND,CAMC,OAAMO,KAAN,EAAa;AACZR,MAAAA,OAAO,CAACC,GAAR,CAAY,sCAAZ;AACD;AACF;;AAEJQ,EAAAA,iBAAiB,GAAE;AACd,SAAKV,eAAL;AACA,SAAKF,QAAL;AACD;;AAEJA,EAAAA,QAAQ,CAACa,CAAD,EAAI;AACP,UAAMC,MAAM,GAAGrB,WAAW,CAACoB,CAAC,CAACE,MAAF,CAAShB,KAAV,CAA1B;AACA,SAAKiB,QAAL,CAAc;AAACjB,MAAAA,KAAK,EAAEe;AAAR,KAAd;AACF;;AAEFG,EAAAA,MAAM,GAAG;AAEP,wBACI;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,cAAD;AACI,QAAA,GAAG,EAAE,CADT;AACY,QAAA,GAAG,EAAE,GADjB;AAEI,QAAA,KAAK,EAAE,KAAKpB,KAAL,CAAWE,KAFtB;AAE6B,QAAA,IAAI,EAAE,CAFnC;AAGI,QAAA,QAAQ,EAAE,KAAKC,QAAL,CAAcC,IAAd,CAAmB,IAAnB;AAHd;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AASD;;AA7C4B;;AA+C/B,eAAeP,MAAf","sourcesContent":["import React, {Component} from 'react';\nimport Config from \"../scripts/config\";\nimport {Row,Col, Container, Button} from \"react-bootstrap\";\nimport {RangeStepInput,forceNumber} from 'react-range-step-input';\n\n\n\n\nclass Rossrv extends Component {\n  state = {ros: null,\n            value: 50\n              };\n\n  constructor(props){\n    super(props);\n    this.onChange = this.onChange.bind(this);\n    }\n  // create a pose subscriber\n  init_connection(){\n    console.log(\"Establish map connection\");\n\n      try{\n        this.state.ros = new window.ROSLIB.Ros();\n        this.state.ros.connect(\n          \"ws://\"+Config.ROSBRIDGE_SERVER_IP+\":\"+Config.RSOBRIDGE_PORT+\"\"\n        );\n        console.log(\"In map components\");\n      }catch(error) {\n        console.log(\"Connection problem in map components\");\n      }\n    }\n\n componentDidMount(){\n      this.init_connection();\n      this.onChange();\n    }\n\n onChange(e) {\n      const newVal = forceNumber(e.target.value);\n      this.setState({value: newVal});\n   }\n\n  render (){\n\n    return(\n        <div>\n          <p>Here's an example RangeStepInput:</p>\n          <RangeStepInput\n              min={0} max={100}\n              value={this.state.value} step={1}\n              onChange={this.onChange.bind(this)}\n          />\n      </div> );\n  }\n}\nexport default Rossrv;\n"]},"metadata":{},"sourceType":"module"}