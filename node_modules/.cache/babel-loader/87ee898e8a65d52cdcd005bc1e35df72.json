{"ast":null,"code":"var _jsxFileName = \"/home/robotuser10/Downloads/my-app/src/components/Rossrv.jsx\";\nimport React, { Component } from 'react';\nimport Config from \"../scripts/config\";\nimport { Row, Col, Container, Button } from \"react-bootstrap\";\nimport Slider, { Range } from 'rc-slider';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Rossrv extends Component {\n  constructor() {\n    super();\n    this.state = {\n      ros: null\n    };\n  } // create a pose subscriber\n\n\n  init_connection() {\n    console.log(\"Establish map connection\");\n\n    try {\n      this.state.ros = new window.ROSLIB.Ros();\n      this.state.ros.connect(\"ws://\" + Config.ROSBRIDGE_SERVER_IP + \":\" + Config.RSOBRIDGE_PORT + \"\");\n      console.log(\"In map components\");\n    } catch (error) {\n      console.log(\"Connection problem in map components\");\n    }\n  }\n\n  componentDidMount() {\n    this.init_connection();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Rossrv;","map":{"version":3,"sources":["/home/robotuser10/Downloads/my-app/src/components/Rossrv.jsx"],"names":["React","Component","Config","Row","Col","Container","Button","Slider","Range","Rossrv","constructor","state","ros","init_connection","console","log","window","ROSLIB","Ros","connect","ROSBRIDGE_SERVER_IP","RSOBRIDGE_PORT","error","componentDidMount","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAAQC,GAAR,EAAYC,GAAZ,EAAiBC,SAAjB,EAA4BC,MAA5B,QAAyC,iBAAzC;AACA,OAAOC,MAAP,IAAiBC,KAAjB,QAA8B,WAA9B;;;AAEA,MAAMC,MAAN,SAAqBR,SAArB,CAA+B;AAM7BS,EAAAA,WAAW,GAAE;AACX;AADW,SALbC,KAKa,GALL;AAACC,MAAAA,GAAG,EAAE;AAAN,KAKK;AAER,GARwB,CAS7B;;;AACAC,EAAAA,eAAe,GAAE;AACfC,IAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;;AAEE,QAAG;AACD,WAAKJ,KAAL,CAAWC,GAAX,GAAiB,IAAII,MAAM,CAACC,MAAP,CAAcC,GAAlB,EAAjB;AACA,WAAKP,KAAL,CAAWC,GAAX,CAAeO,OAAf,CACE,UAAQjB,MAAM,CAACkB,mBAAf,GAAmC,GAAnC,GAAuClB,MAAM,CAACmB,cAA9C,GAA6D,EAD/D;AAGAP,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACD,KAND,CAMC,OAAMO,KAAN,EAAa;AACZR,MAAAA,OAAO,CAACC,GAAR,CAAY,sCAAZ;AACD;AACF;;AAEJQ,EAAAA,iBAAiB,GAAE;AACd,SAAKV,eAAL;AACD;;AAEHW,EAAAA,MAAM,GAAG;AAEP,wBACE;AAAA;AAAA;AAAA;AAAA,YADF;AAMD;;AApC4B;;AAsC/B,eAAef,MAAf","sourcesContent":["import React, {Component} from 'react';\nimport Config from \"../scripts/config\";\nimport {Row,Col, Container, Button} from \"react-bootstrap\";\nimport Slider, { Range } from 'rc-slider';\n\nclass Rossrv extends Component {\n  state = {ros: null,\n\n              };\n\n\n  constructor(){\n    super();\n      }\n  // create a pose subscriber\n  init_connection(){\n    console.log(\"Establish map connection\");\n\n      try{\n        this.state.ros = new window.ROSLIB.Ros();\n        this.state.ros.connect(\n          \"ws://\"+Config.ROSBRIDGE_SERVER_IP+\":\"+Config.RSOBRIDGE_PORT+\"\"\n        );\n        console.log(\"In map components\");\n      }catch(error) {\n        console.log(\"Connection problem in map components\");\n      }\n    }\n\n componentDidMount(){\n      this.init_connection();\n    }\n\n  render (){\n\n    return(\n      <div>\n\n\n      </div>\n      );\n  }\n}\nexport default Rossrv;\n"]},"metadata":{},"sourceType":"module"}