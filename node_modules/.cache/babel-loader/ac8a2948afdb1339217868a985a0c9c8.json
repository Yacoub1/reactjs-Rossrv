{"ast":null,"code":"var _jsxFileName = \"/home/robotuser10/ur10_catkinworkspace/my-app/src/components/Rossrv.jsx\";\nimport React, { Component } from 'react';\nimport Config from \"../scripts/config\";\nimport { Row, Col, Container, Button } from \"react-bootstrap\";\nimport Slider, { createSliderWithTooltip } from 'rc-slider';\nimport 'rc-slider/assets/index.css'; //import { RosService } from 'ngx-roslib';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Rossrv extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      ros: null,\n      rbServer: null,\n      speed: 10,\n      force: 70,\n      pose: 0\n    };\n\n    this.onAfterChange = value => {\n      console.log(value); //eslint-disable-line\n    };\n\n    this.onSpeedSliderChange = value => {\n      this.log(\"Speed: \");\n      this.log(this.state.speed);\n      this.setState({\n        speed: value\n      });\n      console.log(\"Speed: \" + this.state.speed);\n    };\n\n    this.onPoseSliderChange = value => {\n      this.log(\"Pose: \");\n      this.log(this.state.pose);\n      this.setState({\n        pose: value\n      });\n      console.log(\"Pose: \" + this.state.pose);\n    };\n\n    this.onForceSliderChange = value => {\n      this.log(\"Force: \");\n      this.log(this.state.force);\n      this.setState({\n        force: value\n      });\n      console.log(\"Force: \" + this.state.force);\n    };\n\n    this.call_rossrv = this.call_rossrv.bind(this);\n  }\n\n  log(value) {\n    console.log(value); //eslint-disable-line\n  }\n\n  // create a pose subscriber\n  init_connection() {\n    console.log(\"Establish map connection\");\n\n    try {\n      this.state.ros = new window.ROSLIB.Ros();\n      this.state.ros.connect(\"ws://\" + Config.ROSBRIDGE_SERVER_IP + \":\" + Config.RSOBRIDGE_PORT + \"\");\n      console.log(\"Rose Service Component\");\n    } catch (error) {\n      console.log(\"Connection problem in ROS Service Component\");\n    }\n  }\n\n  componentDidMount() {\n    this.init_connection();\n  }\n\n  call_rossrv() {\n    console.log(\"Button clicked\");\n    var robotiq_gripper = new window.ROSLIB.Service({\n      ros: this.state.ros,\n      name: '/add_two_ints',\n      serviceType: 'ur_robotiq_ctl/AddTwoInts'\n    });\n    var request = new window.ROSLIB.ServiceRequest({\n      a: this.state.force,\n      b: this.state.pose\n    }); // const service = new RosService<{},{ a: Int64, b: Int46}>({\n    //     ros: this.state.rbServer,\n    //     name: '/ur_robotiq_ctl/add_two_ints',\n    //     serviceType: 'ur_robotiq_ctl/AddTwoIntss',\n    //     });\n    //\n    // service.call({}, (msg) => {\n    //     console.log(`ROS listed these topics ${msg.topics} with these topic types ${msg.types}`);\n    // });\n    //\n    //   robotiq_gripper.callService(request, function(result) {\n    //   console.log('Result for service call on '\n    //     + robotiq_gripper.name\n    //     + ': '\n    //     + result.sum);\n    // });\n    // console.log(request);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Speed:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Slider, {\n          value: this.state.speed,\n          onChange: this.onSpeedSliderChange,\n          onAfterChange: this.onAfterChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 12\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Pose:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Slider, {\n          value: this.state.pose,\n          onChange: this.onPoseSliderChange,\n          onAfterChange: this.onAfterChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Force:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(Slider, {\n          value: this.state.force,\n          onChange: this.onForceSliderChange,\n          onAfterChange: this.onAfterChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 10\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => this.call_rossrv(),\n          children: \"Request ROS SRV\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default Rossrv;","map":{"version":3,"sources":["/home/robotuser10/ur10_catkinworkspace/my-app/src/components/Rossrv.jsx"],"names":["React","Component","Config","Row","Col","Container","Button","Slider","createSliderWithTooltip","Rossrv","constructor","props","state","ros","rbServer","speed","force","pose","onAfterChange","value","console","log","onSpeedSliderChange","setState","onPoseSliderChange","onForceSliderChange","call_rossrv","bind","init_connection","window","ROSLIB","Ros","connect","ROSBRIDGE_SERVER_IP","RSOBRIDGE_PORT","error","componentDidMount","robotiq_gripper","Service","name","serviceType","request","ServiceRequest","a","b","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport Config from \"../scripts/config\";\nimport {Row,Col, Container, Button} from \"react-bootstrap\";\nimport Slider, { createSliderWithTooltip } from 'rc-slider';\nimport 'rc-slider/assets/index.css'\n//import { RosService } from 'ngx-roslib';\n\n\n\nclass Rossrv extends Component {\n  state = {ros: null,\n          rbServer: null,\n          speed: 10,\n          force:70,\n          pose:0\n              };\n\n  constructor(props){\n    super(props);\n    this.call_rossrv = this.call_rossrv.bind(this);\n    }\n  log(value) {\n        console.log(value); //eslint-disable-line\n      }\n\n  onAfterChange = value => {\n      console.log(value); //eslint-disable-line\n  };\n  // create a pose subscriber\n  init_connection(){\n    console.log(\"Establish map connection\");\n\n      try{\n        this.state.ros = new window.ROSLIB.Ros();\n        this.state.ros.connect(\n          \"ws://\"+Config.ROSBRIDGE_SERVER_IP+\":\"+Config.RSOBRIDGE_PORT+\"\"\n        );\n        console.log(\"Rose Service Component\");\n      }catch(error) {\n        console.log(\"Connection problem in ROS Service Component\");\n      }\n    }\n\n componentDidMount(){\n       this.init_connection();\n    }\n\n  onSpeedSliderChange = value => {\n        this.log(\"Speed: \");\n        this.log(this.state.speed);\n        this.setState({\n          speed:value,\n        });\n        console.log(\"Speed: \"+this.state.speed);\n      };\n\n  onPoseSliderChange = value => {\n            this.log(\"Pose: \");\n            this.log(this.state.pose);\n            this.setState({\n              pose: value,\n            });\n            console.log(\"Pose: \"+this.state.pose);\n          };\n\n  onForceSliderChange = value => {\n          this.log(\"Force: \");\n          this.log(this.state.force);\n          this.setState({\n            force:value,\n          });\n          console.log(\"Force: \"+this.state.force);\n        };\n\n  call_rossrv(){\n    console.log(\"Button clicked\")\n\n    var robotiq_gripper = new window.ROSLIB.Service({\n                          ros : this.state.ros,\n                          name : '/add_two_ints',\n                          serviceType : 'ur_robotiq_ctl/AddTwoInts'\n                          });\n\n    var request = new window.ROSLIB.ServiceRequest({\n                              a: this.state.force,\n                              b : this.state.pose,\n                            });\n\n    // const service = new RosService<{},{ a: Int64, b: Int46}>({\n    //     ros: this.state.rbServer,\n    //     name: '/ur_robotiq_ctl/add_two_ints',\n    //     serviceType: 'ur_robotiq_ctl/AddTwoIntss',\n    //     });\n    //\n    // service.call({}, (msg) => {\n    //     console.log(`ROS listed these topics ${msg.topics} with these topic types ${msg.types}`);\n    // });\n  //\n  //   robotiq_gripper.callService(request, function(result) {\n  //   console.log('Result for service call on '\n  //     + robotiq_gripper.name\n  //     + ': '\n  //     + result.sum);\n  // });\n  // console.log(request);\n\n}\nrender() {\n      return (\n        <Container>\n          <div>\n          <h3>Speed:</h3>\n           <Slider\n                value={this.state.speed}\n                onChange={this.onSpeedSliderChange}\n                onAfterChange={this.onAfterChange}\n          />\n          </div>\n          <div>\n          <h3>Pose:</h3>\n          <Slider\n               value={this.state.pose}\n               onChange={this.onPoseSliderChange}\n               onAfterChange={this.onAfterChange}\n         />\n         </div>\n         <div>\n         <h3>Force:</h3>\n         <Slider\n              value={this.state.force}\n              onChange={this.onForceSliderChange}\n              onAfterChange={this.onAfterChange}\n        />\n        </div>\n        <div>\n        <button type=\"button\" onClick={() => this.call_rossrv()}>Request ROS SRV</button>\n        </div>\n      </Container>\n      );\n      }\n}\nexport default Rossrv;\n"]},"metadata":{},"sourceType":"module"}