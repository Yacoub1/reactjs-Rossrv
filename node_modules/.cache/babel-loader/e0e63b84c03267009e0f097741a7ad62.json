{"ast":null,"code":"var _jsxFileName = \"/home/robotuser10/Downloads/my-app/src/components/Teleoperation.jsx\";\nimport React, { Component } from 'react'; //import {Button} from \"react-bootstrap\"\n\nimport { Joystick } from 'react-joystick-component';\nimport Config from \"../scripts/config\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Teleoperation extends Component {\n  constructor() {\n    super();\n    this.state = {\n      ros: null\n    };\n    this.init_connection();\n    this.handleMove = this.handleMove.bind(this);\n    this.handleStop = this.handleStop.bind(this);\n  }\n\n  init_connection() {\n    this.state.ros = new window.ROSLIB.Ros();\n    console.log(this.state.ros);\n    this.state.ros.on(\"connection\", () => {\n      console.log(\"connection is established In the Tele component!\");\n      this.setState({\n        connected: true\n      });\n    });\n    this.state.ros.on(\"close\", () => {\n      console.log(\"connection is closed In the Tele component!\");\n      this.setState({\n        connected: false\n      }); // try to reconnecet every 3 sec\n\n      setTimeout(() => {\n        try {\n          this.state.ros.connect(\"ws://\" + Config.ROSBRIDGE_SERVER_IP + \":\" + Config.RSOBRIDGE_PORT + \"\");\n        } catch (error) {\n          console.log(\"Connection problem\");\n        }\n      }, Config.CONNECTION_TIMER);\n    });\n\n    try {\n      this.state.ros.connect(\"ws://\" + Config.ROSBRIDGE_SERVER_IP + \":\" + Config.RSOBRIDGE_PORT + \"\");\n    } catch (error) {\n      console.log(\"Connection problem\");\n    }\n  }\n\n  handleMove(event) {\n    console.log(\"Handle Move \"); // Publisher cmd_vel\n\n    var cmd_vel = new window.ROSLIB.Topic({\n      ros: this.state.ros,\n      name: Config.CMD_VEL,\n      messageType: \"geometry_msgs/Twist\"\n    }); // Piblish twist mesg\n\n    var twist = new window.ROSLIB.Message({\n      linear: {\n        x: event.y / 50,\n        y: 0,\n        z: 0\n      },\n      angular: {\n        x: 0,\n        y: 0,\n        z: -event.x / 50\n      }\n    }); // Publish combined mesg\n\n    cmd_vel.publish(twist);\n  }\n\n  handleStop() {\n    console.log(\"Handle Stop \"); // Publisher cmd_vel\n\n    var cmd_vel = new window.ROSLIB.Topic({\n      ros: this.state.ros,\n      name: Config.CMD_VEL,\n      messageType: \"geometry_msgs/Twist\"\n    }); // Piblish twist mesg\n\n    var twist = new window.ROSLIB.Message({\n      linear: {\n        x: 0,\n        y: 0,\n        z: 0\n      },\n      angular: {\n        x: 0,\n        y: 0,\n        z: 0\n      }\n    }); // Publish combined mesg\n\n    cmd_vel.publish(twist);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Joystick, {\n        size: 100,\n        sticky: false,\n        baseColor: \"#EEEEEE\",\n        stickColor: \"#BBBBBB\",\n        move: this.handleMove,\n        stop: this.handleStop\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Teleoperation;","map":{"version":3,"sources":["/home/robotuser10/Downloads/my-app/src/components/Teleoperation.jsx"],"names":["React","Component","Joystick","Config","Teleoperation","constructor","state","ros","init_connection","handleMove","bind","handleStop","window","ROSLIB","Ros","console","log","on","setState","connected","setTimeout","connect","ROSBRIDGE_SERVER_IP","RSOBRIDGE_PORT","error","CONNECTION_TIMER","event","cmd_vel","Topic","name","CMD_VEL","messageType","twist","Message","linear","x","y","z","angular","publish","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\n//import {Button} from \"react-bootstrap\"\nimport { Joystick } from 'react-joystick-component';\nimport Config from \"../scripts/config\"\n\n\nclass Teleoperation extends Component {\n  state = {ros: null};\n  constructor(){\n    super();\n    this.init_connection();\n    this.handleMove = this.handleMove.bind(this);\n    this.handleStop = this.handleStop.bind(this);\n  }\n\n  init_connection(){\n    this.state.ros = new window.ROSLIB.Ros();\n    console.log(this.state.ros);\n\n    this.state.ros.on(\"connection\",()=>{\n      console.log(\"connection is established In the Tele component!\");\n      this.setState({connected: true});\n    });\n    this.state.ros.on(\"close\",()=>{\n      console.log(\"connection is closed In the Tele component!\");\n      this.setState({connected: false});\n      // try to reconnecet every 3 sec\n      setTimeout(() => {\n      try{\n        this.state.ros.connect(\"ws://\"+Config.ROSBRIDGE_SERVER_IP+\":\"+Config.RSOBRIDGE_PORT+\"\");\n      }catch(error){\n        console.log(\"Connection problem\");\n      }\n    }, Config.CONNECTION_TIMER);\n    });\n\n  try{\n    this.state.ros.connect(\"ws://\"+Config.ROSBRIDGE_SERVER_IP+\":\"+Config.RSOBRIDGE_PORT+\"\");\n  }catch(error){\n    console.log(\"Connection problem\");\n  }\n  }\n\n  handleMove(event){\n    console.log(\"Handle Move \")\n    // Publisher cmd_vel\n    var cmd_vel = new window.ROSLIB.Topic({\n      ros: this.state.ros,\n      name: Config.CMD_VEL,\n      messageType: \"geometry_msgs/Twist\",\n    });\n    // Piblish twist mesg\n    var twist = new window.ROSLIB.Message({\n      linear: {\n        x: event.y / 50,\n        y: 0,\n        z: 0\n      },\n      angular: {\n        x: 0,\n        y: 0,\n        z: -event.x / 50,\n      },\n    });\n    // Publish combined mesg\n    cmd_vel.publish(twist);\n\n  }\n\n  handleStop(){\n    console.log(\"Handle Stop \")\n    // Publisher cmd_vel\n    var cmd_vel = new window.ROSLIB.Topic({\n      ros: this.state.ros,\n      name: Config.CMD_VEL,\n      messageType: \"geometry_msgs/Twist\",\n    });\n    // Piblish twist mesg\n    var twist = new window.ROSLIB.Message({\n      linear: {\n        x: 0,\n        y: 0,\n        z: 0\n      },\n      angular: {\n        x: 0,\n        y: 0,\n        z: 0,\n      },\n    });\n    // Publish combined mesg\n    cmd_vel.publish(twist);}\n\n  render (){\n    return(\n      <div>\n      <Joystick\n        size={100}\n        sticky={false}\n        baseColor=\"#EEEEEE\"\n        stickColor=\"#BBBBBB\"\n        move={this.handleMove}\n        stop={this.handleStop}\n        ></Joystick>\n      </div>\n  );\n  }\n}\n\nexport default Teleoperation;\n"]},"metadata":{},"sourceType":"module"}